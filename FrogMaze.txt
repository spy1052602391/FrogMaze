package 每日一题.地下迷宫;

import java.util.*;

public class Test {
    static int[][] array = new int[30][2];
    static int count = 0;
    static int min = 1000;
    static int[][] array2 = new int[30][2];
    static int result = 0;
    public static void control(int[][] maze,int row,int col,int P,int n,int m){
        count++;
        array[count][0] = row;
        array[count][1] = col;
        Maze(maze, row, col, P, n, m);
        count--;
    }
    public static void Maze(int[][] maze,int row,int col,int P,int n,int m){
        if(row == 0 && col == m-1 && P>=0){
            if(count < min){
                min = count;
                for(int i=0; i<=count; i++){
                    array2[i][0] = array[i][0];
                    array2[i][1] = array[i][1];
                }
                result = count;
            }
        }
        if(row-1 >= 0){
            if(maze[row-1][col] == 1) {
                if (P - 3 >= 0) {
                    maze[row][col]++;
                    control(maze, row - 1, col, P - 3, n, m);
                    maze[row][col]--;
                }
            }
        }
        if (col+1 < m){
            if(maze[row][col+1] == 1) {
                if (P - 1 >= 0) {
                    maze[row][col]++;
                    control(maze, row, col + 1, P - 1, n, m);
                    maze[row][col]--;
                }
            }
        }
        if (row+1 < n){
            if(maze[row+1][col] == 1) {
                maze[row][col]++;
                control(maze, row + 1, col, P, n, m);
                maze[row][col]--;
            }
        }
        if (col-1 >= 0){
            if(maze[row][col-1] == 1) {
                if (P - 1 >= 0) {
                    maze[row][col]++;
                    control(maze, row, col - 1, P - 1, n, m);
                    maze[row][col]--;
                }
            }
        }
    }

    public static void main(String[] args) {
        int n,m,P;
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        P = sc.nextInt();
        int[][] maze = new int[n][m];
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                maze[i][j] = sc.nextInt();
            }
        }
        array2[0][0] = 0;
        array2[0][1] = 1;
        Maze(maze,0,0,P,n,m);
        array2[result][0] = 0;
        array2[result][1] = 3;
        for(int i=0; i<=result; i++){
            System.out.print("["+array2[i][0]+","+array2[i][1]+"]");
            if(i!=result)
                System.out.print(",");
        }
    }
}
